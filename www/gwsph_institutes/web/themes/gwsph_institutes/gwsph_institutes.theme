<?php

/**
 * @file
 * Functions to support theming in the theme.
 */
 
/**
* Implements hook_preprocess_node() for NODE document templates.
*/



function gwsph_institutes_preprocess_node(&$variables) {
  // Allowed view modes
  $view_mode = $variables['view_mode']; // Retrieve view mode
  $allowed_view_modes = ['full']; // Array of allowed view modes (for performance so as to not execute on unneeded nodes)
 
  // If view mode is in allowed view modes list, pass to gwsph_institutes_add_regions_to_node()
  if(in_array($view_mode, $allowed_view_modes)) {
    // Allowed regions (for performance so as to not execute for unneeded region)
    $allowed_regions = array(['sidebar_first'], ['sidebar_second']);
    gwsph_institutes_add_regions_to_node($allowed_regions, $variables);
  }
}

 
/**
* gwsph_institutes_add_regions_to_node
*/
 
function gwsph_institutes_add_regions_to_node($allowed_regions, &$variables) {
  // Retrieve active theme
  $theme = \Drupal::theme()->getActiveTheme()->getName();
 
  // Retrieve theme regions
  $available_regions = system_region_list($theme, 'REGIONS_ALL');
 
  foreach($allowed_regions as $allowed) {
  
  // Validate allowed regions with available regions
  $regions = array_intersect(array_keys($available_regions), $allowed);
 
  // For each region
  foreach ($regions as $key => $region) {
 
    // Load region blocks
   $blocks = entity_load_multiple_by_properties('block', array('theme' => $theme, 'region' => $region));
 
    // Sort ‘em
    uasort($blocks, 'Drupal\block\Entity\Block::sort');
 
    // Capture viewable blocks and their settings to $build
    $build = array();
    foreach ($blocks as $key => $block) {
      if ($block->access('view')) {
        $build[$key] = entity_view($block, 'block');
      }
    }
 
    // Add build to region
    $variables[$region] = $build;
  }
  
  }

}

/**
* Added Styles and CSS to article content types
*/
function gwsph_institutes_preprocess_node__article(&$variables) {
  $variables['#attached']['library'][] = 'gwsph_institutes/tabs';
}

/**
* Reverse Two Column template
*/
function gwsph_institutes_preprocess_node__twocolumnpromotion(&$variables) {
  $node = $vars['node'];
  if($node->field_reverse['x-default']['value'] == "1")
  {
       $vars['theme_hook_suggestion'] = 'node__reverse-two-column-promotion';
  } else
  {
       $vars['theme_hook_suggestion'] = 'node__two-column-promotion';
  }

}